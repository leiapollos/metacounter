// THIS FILE IS AUTO-GENERATED BY METACOUNTER. DO NOT EDIT.
#pragma once

#include <stdint.h>

#ifdef __cplusplus

enum class CounterID : uint32_t {
    PlayerHealth = 0,
    PlayerStamina = 1,
    DrawCalls = 2,
    ShaderBinds = 3,
    TextureBinds = 4,
    MainRenderContext = 5,
    ActiveAudioChannels = 6,
    MAX_COUNT = 7
};

constexpr uint32_t MAX_COUNT_INT = 7;

inline const char* get_name_for_CounterID(CounterID id) {
    static const char* names[] = {
        "PlayerHealth",
        "PlayerStamina",
        "DrawCalls",
        "ShaderBinds",
        "TextureBinds",
        "MainRenderContext",
        "ActiveAudioChannels",
    };
    if ((uint32_t)id <= 6) return names[(uint32_t)id];
    return "(invalid)";
}

#define REGISTER_COUNTER(name, ...) CounterID::name
#define REGISTER_UNIQUE_COUNTER(name, ...) CounterID::name

#else

typedef enum {
    CounterID_PlayerHealth = 0,
    CounterID_PlayerStamina = 1,
    CounterID_DrawCalls = 2,
    CounterID_ShaderBinds = 3,
    CounterID_TextureBinds = 4,
    CounterID_MainRenderContext = 5,
    CounterID_ActiveAudioChannels = 6,
    CounterID_MAX_COUNT = 7
} CounterID;

#define MAX_COUNT_INT 7

static inline const char* get_name_for_CounterID(CounterID id) {
    static const char* names[] = {
        "PlayerHealth",
        "PlayerStamina",
        "DrawCalls",
        "ShaderBinds",
        "TextureBinds",
        "MainRenderContext",
        "ActiveAudioChannels",
    };
    if (id <= 6) return names[id];
    return "(invalid)";
}

#define REGISTER_COUNTER(name, ...) CounterID_##name
#define REGISTER_UNIQUE_COUNTER(name, ...) CounterID_##name

#endif
